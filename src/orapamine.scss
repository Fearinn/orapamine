/**
 *------
 * BGA framework: Gregory Isabelli & Emmanuel Colin & BoardGameArena
 * OrapaMine implementation : Â© Matheus Gomes matheusgomesforwork@gmail.com
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * orapamine.css
 *
 * OrapaMine stylesheet
 *
 */

@font-face {
  font-family: "Cookie Run";
  font-style: normal;
  font-weight: normal;
  src: url("img/cookie_run/cookierun-regular.otf") format("opentype");
}

@font-face {
  font-family: "Cookie Run";
  font-style: normal;
  font-weight: bold;
  src: url("img/cookie_run/cookierun-bold.otf") format("opentype");
}

:root {
  --boardHeight: 640px;
  --boardWidth: calc(1.25 * var(--boardHeight));
  --boardColor: rgba(200, 200, 200, 0.8);

  // background: #2d336b;
}

.orp_gameArea {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;

  * {
    box-sizing: border-box;
  }
}

.orp_logHighlight {
  font-weight: bold;
  text-transform: capitalize;
}

.orp_boardContainer {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 32px;
}

.orp_axis {
  position: absolute;
  display: grid;
  align-items: center;
  justify-content: center;

  &.orp_axis-x {
    grid-template-columns: repeat(10, calc(var(--boardWidth) / 10));
    left: 3.75%;

    &[data-position="top"] {
      top: 0;
    }

    &[data-position="bottom"] {
      bottom: 0;
    }
  }

  &.orp_axis-y {
    grid-template-rows: repeat(8, calc(var(--boardHeight) / 8));
    top: 3.75%;

    &[data-position="left"] {
      left: 0;
    }

    &[data-position="right"] {
      right: 0;
    }
  }
}

.orp_origin {
  font-family: "Cookie Run", sans-serif;
  color: white;
  font-weight: bold;
  font-size: 24px;
  text-align: center;
  -webkit-text-stroke: 1.5px navy;
  text-shadow: navy 1px 0 10px;

  padding: 0 1px;

  &-selectable {
    cursor: pointer;
  }

  &-unselectable {
    cursor: not-allowed;
    opacity: 0.5;
  }

  &-selected {
    -webkit-text-stroke-color: black;
    text-shadow: black 1px 0 10px;
    transform: scale(1.2);
    transition-duration: 0.5s;
  }
}

.orp_board {
  display: grid;
  grid-template-columns: repeat(10, calc(var(--boardWidth) / 10));
  grid-template-rows: repeat(8, calc(var(--boardHeight) / 8));
  align-items: center;
  justify-content: center;
}

.orp_cell {
  background-color: var(--boardColor);
  border: 1.5px solid whitesmoke;
  aspect-ratio: 1;
  width: 100%;

  &-selectable {
    cursor: pointer;
  }

  &-selected {
    border: 2px solid black;
    box-shadow: 0 0 8px 0 black;
    transform: scale(1.1);
    transition-duration: 0.5s;
  }

  &-unselectable {
    cursor: not-allowed;
    opacity: 0.75;
  }

  &.orp_occupied {
    background-color: var(--pieceColor);

    &:not(.orp_half) {
      border-color: var(--pieceColorDarker);
    }

    &.orp_half {
      &-1 {
        background: linear-gradient(
          to bottom right,
          var(--boardColor) 50%,
          var(--pieceColor) 50%
        );
        border-bottom-color: var(--pieceColorDarker);
        border-right-color: var(--pieceColorDarker);
      }

      &-2 {
        background: linear-gradient(
          to bottom left,
          var(--boardColor) 50%,
          var(--pieceColor) 50%
        );
        border-bottom-color: var(--pieceColorDarker);
        border-left-color: var(--pieceColorDarker);
      }

      &-3 {
        background: linear-gradient(
          to top right,
          var(--boardColor) 50%,
          var(--pieceColor) 50%
        );
        border-top-color: var(--pieceColorDarker);
        border-right-color: var(--pieceColorDarker);
      }

      &-4 {
        background: linear-gradient(
          to top left,
          var(--boardColor) 50%,
          var(--pieceColor) 50%
        );
        border-top-color: var(--pieceColorDarker);
        border-left-color: var(--pieceColorDarker);
      }
    }
  }
}
